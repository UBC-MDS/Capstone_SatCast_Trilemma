Our exploratory analysis revealed key challenges in fee forecasting: strong daily cycles, right-skewed distributions, and sudden congestion spikes. These patterns exposed the limitations of naive point forecasts and motivated a shift toward volatility-aware, time-sensitive modeling. To address this, we evaluated a diverse set of forecasting models reflecting different temporal dynamics: decomposition methods such as Holt-Winters Exponential Smoothing (HWES) [@holt1957forecasting; @winters1960forecasting] and Prophet [@taylor2018prophet]; autoregressive model Seasonal Autoregressive Integrated Moving Average (SARIMA) [@box2015time]; tree-based learner XGBoost [@chen2016xgboost]; and deep learning architectures including DeepAR [@salinas2017deepar] and the Temporal Fusion Transformer (TFT) [@lim2019temporal]. 

A key contribution of our work is the custom loss function tailored to capture spike sensitivity and relative error fairness. This enabled more meaningful model comparisons beyond traditional metrics like MAE and RMSE. Combined with lag features, careful preprocessing, and robust cross-validation, our modeling pipeline offers a strong foundation for real-world deployment in volatile blockchain conditions.

We assess these models using both standard metrics (e.g., RMSE, MAPE) and a custom composite loss designed to penalize deviation from spike shape, timing, and volatility. We find that TFT significantly outperforms other models, improving key evaluation metrics by 25–35% over baseline approaches. This demonstrates its ability to model non-periodic fee behavior and support forward-looking decision-making. 

The remainder of this report is organized as follows: @sec-techniques outlines the data science techniques used, including preprocessing, model selection, and evaluation strategy. @sec-product presents the data product and results, detailing model performance, intended use, and the system’s extensibility. @sec-conclusion concludes with key takeaways, limitations, and recommendations for future development.